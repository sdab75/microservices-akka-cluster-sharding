<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>service.two</groupId>
	<artifactId>service-two</artifactId>
	<version>1.0.0.BUILD-SNAPSHOT</version>
	<packaging>war</packaging>
	<inceptionYear>2015</inceptionYear>
	<name>service-two</name>
	<description></description>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.2.5.RELEASE</version>
	</parent>
	<properties>
		<start-class>com.cgi.garnet.Application</start-class>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<default.garnet.version>1.0.0.BUILD-SNAPSHOT</default.garnet.version>
		<org.mapstruct.version>1.0.0.CR1</org.mapstruct.version>
		<akka-version>2.4.0</akka-version>
	</properties>

	<dependencies>
		<!-- JSON -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.11</version>
		</dependency>
		<dependency>
			<groupId>javax.json</groupId>
			<artifactId>javax.json-api</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>log4j-over-slf4j</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
				<exclusion>
					<artifactId>logback-classic</artifactId>
					<groupId>ch.qos.logback</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- This dependency will only come in handy when a microservice needs real polygot access with RDBS-->
 		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-rest-webmvc</artifactId>
			<!-- The version attribute purposefully commented so that the spring-data will automatically retrieve the compatible version.-->
<!--  			<version>2.3.2.RELEASE</version> --> 		
 		</dependency>
         <dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-hadoop</artifactId>
			<version>2.2.0.RELEASE</version>
			<exclusions>
				<exclusion>
					<artifactId>jdk.tools</artifactId>
					<groupId>jdk.tools</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Cassandra -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-cassandra</artifactId>
			<version>1.2.2.RELEASE</version>
 			<!-- This will exclude, spring-cql 1.1.x inclusion which is causing conflict issues. -->
 			<exclusions>
 				<exclusion>
 					<artifactId>spring-cql</artifactId>
 					<groupId>org.springframework.data</groupId>
 				</exclusion>
 			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-cql</artifactId>
 			<version>1.2.2.RELEASE</version>			
		</dependency>
		<!-- SOLR -->
 		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-amqp</artifactId>
			<version>1.2.5.RELEASE</version>
		</dependency>
		<dependency>
	        <groupId>org.springframework.data</groupId>
	        <artifactId>spring-data-redis</artifactId>
	        <version>1.5.2.RELEASE</version>
    	</dependency>		
		<dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>2.7.0</version>
        </dependency>
		<!-- test -->
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>2.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>1.2.5.RELEASE</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${org.mapstruct.version}</version>
		</dependency>
		<!-- Validation -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>

		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-actor_2.11</artifactId>
			<version>${akka-version}</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-remote_2.11</artifactId>
			<version>${akka-version}</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-cluster_2.11</artifactId>
			<version>${akka-version}</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-contrib_2.11</artifactId>
			<version>${akka-version}</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-persistence_2.11</artifactId>
			<version>${akka-version}</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-cluster-sharding_2.11</artifactId>
			<version>${akka-version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.krasserm</groupId>
			<artifactId>akka-persistence-cassandra_2.11</artifactId>
			<version>0.4</version>
			<exclusions>
				<exclusion>
					<artifactId>cassandra-driver-core</artifactId>
					<groupId>com.datastax.cassandra</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.datastax.cassandra</groupId>   
			<artifactId>cassandra-driver-core</artifactId>   
<!--
			<version>2.2.0-rc3</version>
-->
			<version>2.1.5</version>
		</dependency>

	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<configuration>
				<source>1.8</source>
				<target>1.8</target>
			</configuration>
		</plugin>
		<plugin>
			<groupId>com.spotify</groupId>
			<artifactId>docker-maven-plugin</artifactId>
			<version>0.3.2</version>
			<configuration>
				<imageName>garnet/acqplan-svcs</imageName>
				<serverId>gntbuild</serverId>
				<registryUrl>https://gntbuild.cgifederal.com:5000</registryUrl>
				<baseImage>java:8</baseImage>
				<entryPoint>["java", "-jar", "/${project.build.finalName}.war"]</entryPoint>
				<resources>
					<resource>
						<directory>${project.build.directory}</directory>
						<include>${project.build.finalName}.war</include>
					</resource>
				</resources>
			</configuration>
		</plugin>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-surefire-plugin</artifactId>
			<configuration>
				<includes>
					<include>**/*UnitTest.java</include>
				</includes>
			</configuration>
		</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>spring-snapshots</id>
			<url>http://repo.springsource.org/libs-snapshot</url>
		</repository>
		<repository>
			<id>spring-releases</id>
			<url>http://repo.springsource.org/libs-release</url>
		</repository>
<!--
		<repository>
			<id>sResolver.typesafeRepo</id>
			<url>http://repo.typesafe.com/typesafe/maven-releases/</url>
		</repository>
-->
	</repositories>

</project>  